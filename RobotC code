const int NORMSPEED = 10;

void gameRules()
{
	eraseDisplay();
	displayString(2, "Use the buttons to move");
	displayString(5, "RED means game over");
	displayString(6, "BLUE gives you super-speed");
	displayString(7, "BLACK reverses your controls");
	displayString(8, "Press middle button to start!");
}

TEV3Buttons saveButton()
{
	while(!getButtonPress(buttonAny) && SensorValue[S2] == 0)
	{}
	TEV3Buttons buttonSave = buttonNone;
	for(TEV3Buttons buttonPressed = buttonUp;
			buttonPressed <= buttonLeft && buttonSave == buttonNone; buttonPressed++)
		{
			if(getButtonPress(buttonPressed))
				buttonSave = buttonPressed;
		}
	return buttonSave;
}

void drive(TEV3Buttons button, int motorPower, bool onBlack)
{
	int colorSaved = SensorValue[S1];

	while(getButtonPress(button) && SensorValue[S1] == colorSaved && SensorValue[S2] == 0)
	{
		if(!onBlack)
		{
			if(button == buttonDown)
				motor[motorA] = motorPower;
			else if(button == buttonUp)
			{
				motor[motorA] = -motorPower;
			}
			else if(button == buttonLeft)
			{
				motor[motorD] = motorPower;
			}
			else
				motor[motorD] = -motorPower;
		}
		else
		{
			if(button == buttonDown)
				motor[motorA] = -motorPower;
			else if(button == buttonUp)
			{
				motor[motorA] = motorPower;
			}
			else if(button == buttonLeft)
			{
				motor[motorD] = -motorPower;
			}
			else if(button == buttonRight)
			{
				motor[motorD] = motorPower;
			}
			else
				displayString(6, "Pressing enter does nothing, stop trying");
		}
	}

	if(!getButtonPress(button))
			motor[motorA] = motor[motorD] = 0;
}

void drive_byColor()
{
	while(SensorValue[S1]==(int)colorWhite && SensorValue[S2] == 0)
	{
		drive(saveButton(), NORMSPEED, false);
	}
	while(SensorValue[S1]==(int)colorBlue && SensorValue[S2] == 0)
	{
		drive(saveButton(), 2.5*NORMSPEED, false);
	}
	while(SensorValue[S1]==(int)colorBlack && SensorValue[S2] == 0)
	{
		drive(saveButton(), NORMSPEED, true);
	}
}

task main()
{
	SensorType[S1]= sensorEV3_Color;
	SensorMode[S1]= modeEV3Color_Color;
	SensorType[S2]= sensorEV3_Touch;

	displayBigTextLine(2, "CROSSING FAVELA");
	displayString(5, "PRESS MIDDLE BUTTON");

	while(!getButtonPress(buttonEnter))
	{}
	while(getButtonPress(buttonEnter))
	{}

	gameRules();

	while(!getButtonPress(buttonEnter))
	{}
	while(getButtonPress(buttonEnter))
	{}
	eraseDisplay();
	displayBigTextLine(3, "GO!GO!GO!");

	time1[T1]=0;

	while(SensorValue[S1]!=(int)colorGreen && SensorValue[S1]!=(int)colorRed && SensorValue[S2] == 0)
	{
		drive_byColor();
	}

	motor[motorA] = motor[motorD] = 0;
	eraseDisplay();

	if(SensorValue[S1]==(int)colorRed)
	{

		displayBigTextLine(3, "YOU DIED");
		displayString(6, "Red is baaaaad, try again");
	}
	else if(SensorValue[S1]==(int)colorGreen)
	{
		displayBigTextLine(3, "Congratulations!");
		displayString(6, "You used %.2f seconds.", time1[T1]/1000.0);
	}
	else
	{
		displayBigTextLine(2, "RAGE QUITTED!");
		displayString(5, "GG no RE");
		displayString(7, "Guess the game is 2 hard 4 you");
		displayString(9, "Mindless Bot: 1, You: 0");
	}
	SensorMode[S1]= modeEV3Color_Reflected;
	/*This line is here because for some reason, the color sensor
	won't configure to Color_Color when running the program repeatedly
	if we don't configure it to a different mode at the end.*/
	wait1Msec(10000);

}
